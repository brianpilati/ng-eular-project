'use strict';

/* Controllers */

angular.module('bpEuler.controllers', []).
  controller('bpProblem1', ['$scope', function($scope) {

    $scope.calculateAnswer = function () {
      var sumNumber=0;
      for (var naturalNumber=1; naturalNumber < $scope.upperNumber; naturalNumber++) {
        sumNumber += (naturalNumber % 3 == 0 || naturalNumber % 5 == 0 ? naturalNumber : 0);
      }
      $scope.answer = sumNumber;
    }

    $scope.problem = "1";
    $scope.explanation = ["If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23."];
    $scope.challenge = "Find the sum of all the multiples of 3 or 5 below 1000.";
    $scope.upperNumber = 10;
    $scope.calculateAnswer();
    $scope.expectedAnswer = 233168;
  }])

  .controller('bpProblem2', ['$scope', function($scope) {

    $scope.calculateAnswer = function () {

      var term = 0;
      var sumOfEvens = 0;
      var nTerm = 0;
      var nTermPlusnTerm = 1;
      var newArray = []; 
      var allArray = [];

      term = nTerm + nTermPlusnTerm;
      while (term < $scope.upperNumber) {
        if (term % 2 == 0) {
          sumOfEvens += term;
          newArray.push(term);
        }
        allArray.push(term);
        nTerm = nTermPlusnTerm;
        nTermPlusnTerm = term;
        term = nTerm + nTermPlusnTerm;
      }

      $scope.answer = sumOfEvens
      $scope.newArray = newArray;
      $scope.allArray = allArray;
    }

    $scope.problem = "2";
    $scope.explanation = [
      "Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:",
      "1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ..."
    ];
    $scope.challenge = "By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.";
    $scope.upperNumber = 10;
    $scope.calculateAnswer();
    $scope.expectedAnswer = 4613732;
  }]);
